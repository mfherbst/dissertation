#!/usr/bin/env python3

from matplotlib import pyplot as plt
import common
import os
import scipy.io
import yaml


def main():
    common.setup()

    # This file was generated by the program h_poisson_schr√∂dinger
    # using roughly the following settings:
    #   - Be atom
    #   - Grid: Finer inner grid [-20, 20] bohr in each direction (x, y, z)
    #   - Outer grid: coarser, range [-200, 200] bohr in each direction
    #   - Inner grid twice refined
    #   - hcore guess
    #   - Around 10 SCF steps with adaptive refinement
    #   - quadratic finite elements
    #
    fefile = "./Be.fe.stiff.mtx.gz"
    if not os.path.isfile(fefile):
        raise SystemExit("Cannot plot fock_fe.pdf, since fe data file not found.")

    # This is the stiffness matrix minus the exchange matrix,
    # so strictly speaking T + V0 + J, so the core Hamiltonian plus Coulomb
    #
    fecore_file = "./Be.fe.core.mtx.gz"
    if not os.path.isfile(fecore_file):
        raise SystemExit("Cannot plot fock_fe.pdf, since fe core data file not found.")

    # Plot full fock matrices
    fe = scipy.io.mmread(fefile).todense()
    fecore = scipy.io.mmread(fecore_file).todense()

    common.plot_mtcs([fecore, fe], middle_labels=False, vrange=(-10, 0))
    plt.savefig("fock_fe.pdf", bbox_inches="tight", dpi=300)

    with open("fock_fe_props.yaml", "w") as f:
        props = common.mtx_properties(fe)
        yaml.safe_dump(props, f)


if __name__ == "__main__":
    main()
